{"name":"ChinoPinball","tagline":"Openframeworks Pinball with the Bullet 3D engine","body":"chinoPinball\r\n============\r\n\r\nChinoPinball is an opensource tool for mapping pinball via projection.\r\n\r\n***\r\n###Videos with the ChinoPinball in action\r\n\r\nChinoPinball@FAB10 2014 DHUB Barcelona https://vimeo.com/100059297\r\n\r\n\r\n***\r\n###Screenshot\r\n\r\n![Screenshot](/doc/screenshot.png)\r\n\r\n***\r\n###GITHUB \r\n**fork** master branch\r\n\r\nDude, where's my fork? \r\nEach developer has to fork in his Github ( click on website fork ) \r\nThen clone it to you git client\r\n```\r\n\t>> git clone http://GitHubProjectAdresss\r\n```\t\r\ndevelop your code\r\nadd changes to the local repo\r\n```\r\n\t>> git add <filename>\r\n\tor\r\n\t>> git add *\r\n```\r\nupload your changes to your github branch\r\n```\r\n\t>> git stage xxx file\r\n\t>> git commit -m 'message to the statge files'\r\n\t>> git push or git push -u origin master\r\n```\r\nif the local repo is not connected to the remote one\r\n```\r\n\t>> git remote add origin <server>\r\n```\r\nupdate local repository with remote changes\r\n```\r\n\tgit pull\r\n```\r\nbranches\r\n```\r\n\t>> git checkout -b <branch> #create new branch\r\n\t>> git checkout master #switch to master branch\r\n\t>> git branch -d <branch> #delete branch\r\n\t>> git push origin <branch> #push branch to remote repository\r\n\t\r\n```\r\nmerge\r\n```\r\n\tgit merge <branch>\r\n```\r\nrestore file with the last working copy from HEAD\r\n```\r\n\t>> git checkout -- <filename>\r\n```\r\nWhen finally\r\nu wanna merge it, to chinos  master branch \r\npush from origin to master \t\r\n```\r\n\t>> git push -u origin masterChinos\r\n```\r\n\r\n***\r\n###Examples of similar projects\r\n\r\nhttp://www.youtube.com/watch?v=eyUKAFCaHzo\r\nhttp://www.youtube.com/watch?v=MljNwzBp1y8\r\nhttp://www.youtube.com/watch?v=YvyRM175uQ0\r\n\r\n\r\n\r\n***\r\n###Dependencies\r\n\r\n* OF008 http://www.openframeworks.cc \r\n* ofxBullet https://github.com/NickHardeman/ofxBullet\r\n* ofxSyphon https://github.com/astellato/ofxSyphon\r\n* ofxJSON https://github.com/jefftimesten/ofxJSON.git\r\n* ofxDmx https://github.com/kylemcdonald/ofxDmx.git\r\n* ofxFTGL https://github.com/Flightphase/ofxFTGL\r\n\r\nCurrently developed on MAC (XCode 5.0.2, MAC OS SDK 10.9, LLVM compiler) and Windows (CodeBlocks) (not countinued)\r\n\r\nWe are using MadMapper for projection mapping http://www.madmapper.com\r\n\r\n***\r\n###ClassHierarchy\r\n\r\n![ClassHierarchy](/doc/ClassHierarchy.png)\r\n\r\n***\r\n###SystemOverview\r\n![SystemOverview](/doc/ChinoPinballDeploymentDiagram.jpg)\r\n\r\n***\r\n###Projection mapping\r\n\r\n**Mappig the game on one surface with 3D elements**\r\n\r\n* First step is to find or build a physical space for mapping (like a wall or ramp with some 3D elements)\r\n* Second, setup projector and don't touch it later\r\n* Next, in the game, adjust free camera position and FOV according to spectators' point of view (it is not the same as projector's point of view) and fix the camera\r\n* In Madmapper grab video from Syphon and adjust it so that game's perspective fits to the physical space\r\n* Edit scenario using scenario editor to fit the table and objects to physical elements  \r\n\r\n**Mappig the game on multiple surfaces with 3D elements**\r\n\r\nWe don't know how to do this yet ...\r\n\r\n\r\n***\r\n###Scenario editor\r\n\r\nThe idea is to be able to create scenario directly on the place where the game will be projected, without prior preparation (only the objects could be prepared earlier).\r\nThen, maybe we could also let the people create scenarios by themselves. \r\n\r\nEditor should have the following functionalities:\r\n* saved/load scenario to a file\r\n* change width and height of a table (with walls)\r\n* add new objects\r\n* select object to edit\r\n* edit object's properties:\r\n\t* position XY (we can forget about Z for now), the best would be drag&drop\r\n\t* scale\r\n\t* rotation\r\n\t* color\r\n* objects types: lever, hammer, obstacle ...\r\n\r\n\r\n***\r\n###Key bindings\r\n\r\n* F1 - OF_LOG_SILENT\r\n* F2 - OF_LOG_VERBOSE\r\n* F3 - CollisionVerbose\r\n* F4 - EditorVerbose\r\nPinballChinoManager\r\n* f - fullscreen\r\n* s - save camera position to file\r\n* l - load camera postion\r\nInputEventManager\r\n* enter - restart game\r\n* down - move hammer\r\n* m/M - move right lever\r\n* z/Z - move right lever\r\n* d/D - draw debug\r\nScenarioEditor\r\n* e - toggle editor mode\r\n* x - saving scenario to file\r\n* 0 - add a ball\r\n* 3 - add a lever\r\n* 5 - add a hammer\r\n* 6 - add an obstacle\r\n\r\n### GitHub Pages Tutorial.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}